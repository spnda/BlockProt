import org.apache.tools.ant.filters.ReplaceTokens
import org.kohsuke.github.GHReleaseBuilder
import org.kohsuke.github.GitHub

buildscript {
    dependencies {
        classpath 'org.kohsuke:github-api:1.129'
    }

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id 'java-library'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "org.ajoberstar.grgit" version "4.1.0"
}

def ENV = System.getenv()

def gitBranchName() {
    def ENV = System.getenv()
    if (ENV.GITHUB_REF) {
        def branch = ENV.GITHUB_REF
        return branch.substring(branch.lastIndexOf("/") + 1)
    }

    if (grgit == null) {
        return "unknown"
    }

    def branch = grgit.branch.current().name
    return branch.substring(branch.lastIndexOf("/") + 1)
}

def version = "${project.name}-${project.plugin_version}-${gitBranchName()}"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        name = 'Spigot'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven {
        name = 'CodeMC'
        url = 'https://repo.codemc.org/repository/maven-public/'
        content {
            includeGroup 'de.tr7zw'
            includeGroup 'org.bstats'
            includeGroup 'net.wesjd'
        }
    }
    mavenCentral()
}

dependencies {
    implementation 'de.tr7zw:item-nbt-api:2.7.1' // item-nbt-api

    // Use anvils as inventories. They're stupid and require NMS, making renaming much easier.
    implementation 'net.wesjd:anvilgui:1.5.0-SNAPSHOT'

    api 'org.bstats:bstats-bukkit:2.2.1'

    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT' // Spigot
}

jar {
    setArchivesBaseName(version)
}

shadowJar {
    archiveFileName = "${version}-all.jar"

    relocate 'de.tr7zw.changeme.nbtapi', 'de.sean.blockprot.nbtapi'
    relocate 'org.bstats', 'de.sean.blockprot.metrics'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        it.setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
        filter ReplaceTokens, tokens: [version: project.plugin_version]
    }
}

application {
    getMainClass().set('de.sean.blockprot.BlockProt')
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

/**
 * This task is currently unused, as CurseGradle does not support uploading
 * Bukkit plugins to CurseForge.
 */
curseforge {
    if (ENV.CURSEFORGE_API_KEY) {
        apiKey = ENV.CURSEFORGE_API_KEY
    }

    project {
        id = "440797"
        changelog = "A changelog can be found at https://github.com/spnda/BlockProt/commits"
        releaseType = "release"
        addGameVersion "1.16"
        addGameVersion "1.15"
        addGameVersion "1.14"

        mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-all.jar")) {
            displayName = project.plugin_version
        }
    }
}

task github() {
    onlyIf {
        ENV.GITHUB_TOKEN
    }

    doLast {
        def github = GitHub.connectUsingOAuth(ENV.GITHUB_TOKEN as String)
        def repository = github.getRepository(ENV.GITHUB_REPOSITORY)

        def releaseBuilder = new GHReleaseBuilder(repository, version as String)
        releaseBuilder.name(version)
        releaseBuilder.body("A changelog can be found at https://github.com/spnda/BlockProt/commits")
        releaseBuilder.commitish(gitBranchName())

        def ghRelease = releaseBuilder.create()
        ghRelease.uploadAsset(file("${project.buildDir}/libs/${archivesBaseName}-all.jar"), "application/java-archive")
    }
}
